@model IEnumerable<Ubrania_ASP.NET_Nowy.Models.Cloth>
    @{
        ViewData["Title"] = "AgreementClothes";
        var ClothList = Model.FirstOrDefault();
        var AID = ClothList.Agreement_Id;
    }
    <br />
    <h2>Spis Ubrań Umowy: </h2>



    <div class="form-border">
        <table class="table">
            <thead>
                <tr>
                    <th>
                        Marka
                    </th>
                    <th>
                        Rozmiar
                    </th>
                    <th>
                        Kolor
                    </th>
                    <th>
                        Typ
                    </th>
                    <th>
                        Opis
                    </th>
                    <th>
                        Cena
                    </th>
                    <th>
                        Cena Rzeczywista
                    </th>
                    <th>
                        Sprzedane?
                    </th>
                    <th>
                        Umowa
                    </th>
                    <th></th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model)
                {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.Id)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Mark)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Size)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Colour)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Type)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Description)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Price)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Price_RL)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Sold)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Agreement.Id)
                    </td>
                    <td>
                        @Html.Partial("_ClothManagmentButtonsInClothForAgreementPartial",  item.Id )
                    </td>
                </tr>
                }

            </tbody>
        </table>
        <hr />
        <a asp-action="Index" class="btn btn-success">Powrót</a>

    </div>
    
      @await Html.PartialAsync("_CreateClothPartial", new Cloth { Agreement_Id = AID })
  


    @*@await Html.PartialAsync("_CreateClothPartial", new Cloth())*@
    @section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    <script src="~/js/typeahead.js"></script>
    <script>
        $(document).ready(function () {

            var colourSrc = new Bloodhound({
                datumTokenizer: Bloodhound.tokenizers.obj.whitespace,
                queryTokenizer: Bloodhound.tokenizers.whitespace,
                remote: {
                    url: '/API/Properties?type=colour&query=%QUERY',
                    wildcard: '%QUERY'
                }
            });

            $('#colour').typeahead(null, {
                display: 'nameOf',
                source: colourSrc
            });
        })

        $(document).ready(function () {

            var colourSrc = new Bloodhound({
                datumTokenizer: Bloodhound.tokenizers.obj.whitespace,
                queryTokenizer: Bloodhound.tokenizers.whitespace,
                remote: {
                    url: '/API/Properties?type=mark&query=%QUERY',
                    wildcard: '%QUERY'
                }
            });

            $('#mark').typeahead(null, {
                display: 'nameOf',
                source: colourSrc
            });
        })

        $(document).ready(function () {

            var colourSrc = new Bloodhound({
                datumTokenizer: Bloodhound.tokenizers.obj.whitespace,
                queryTokenizer: Bloodhound.tokenizers.whitespace,
                remote: {
                    url: '/API/Properties?type=size&query=%QUERY',
                    wildcard: '%QUERY'
                }
            });

            $('#size').typeahead(null, {
                display: 'nameOf',
                source: colourSrc
            });
        })
        $(document).ready(function () {
            $("button").click(function () {
                $("p").toggle();
            });
        });

    </script>
    }
